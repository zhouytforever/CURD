/*
 * @author: yuting.zhou
 * @description: write your code of business here
 * Generated by model2view cli
 */
import {
  defaultSearch,
  defaultEntity,
  baseColumns,
  MODE,
} from './config';
import { create, update, retrieve, del } from './api';

export default {
  data() {
    return {
      searchCondition: JSON.parse(JSON.stringify(defaultSearch)),
      entity: JSON.parse(JSON.stringify(defaultEntity)),
      selectedRows: [],
      showModal: false,
      mode: MODE.VIEW,
      dataSource: [],
      columns: [...baseColumns,
        {
          title: '操作',
          render: (h, { row }) => h('div', [
            h('Button', {
              props: {
                type: 'primary',
              },
              on: {
                click: () => {
                  const { _index, _rowKey, ...origin } = row;
                  this.entity = JSON.parse(JSON.stringify(origin));
                  this.mode = MODE.EDIT;
                },
              },
            }, '编辑'),
            h('Button', {
              props: {
                type: 'error',
              },
              on: {
                click: () => {
                  this.onDelete(row.id);
                },
              },
            }, '删除'),
          ]),
        }],
    };
  },

  watch: {
    mode(val) {
      this.showModal = val === MODE.ADD || val === MODE.EDIT;
    },
  },

  computed: {
    modalTitle() {
      return this.mode === MODE.ADD ? '新增': '编辑';
    },
  },

  methods: {
    onAdd() {
      this.entity = JSON.parse(JSON.stringify(defaultEntity));
      this.mode = MODE.ADD;
    },

    onSearch(original) {
      if (original) { this.searchCondition = JSON.parse(JSON.stringify(defaultSearch)); }
      retrieve(this.searchCondition).then((resData) => {
        this.dataSource = resData.data || [];
        this.searchCondition.page.totalSize = resData.page.totalSize || 0;
      }).catch((res) => {
        this.$Message.error(res.msg);
      });
    },

    // 改变分页
    onPageChange(pageNo) {
      this.searchCondition.page.pageNo = pageNo;
      this.onSearch();
    },

    // 选择行
    onSelect(section) {
      this.selectedRows = section.map(item => item.id);
    },

    // 删除，单行或者选中
    onDelete(id) {
      this.$Modal.confirm({
        content: '确定要删除?',
        onOk: () => {
          del(id? [id]: this.selectedRows).then(() => {
            this.$Message.success('删除成功');
            this.onSearch();
          }).catch((res) => {
            this.$Message.error(res.msg);
          });
        },
      });
    },

    onSave() {
      const method = this.mode === MODE.ADD? create: update;
      method(this.entity).then(() => {
        this.$Message.success('保存成功');
        this.onSearch(true);
        this.mode = MODE.VIEW;
      }).catch((res) => {
        this.$Message.error(res.msg || '保存失败');
      });
    },
  },

  mounted() {
    this.onSearch(true);
  },
};
